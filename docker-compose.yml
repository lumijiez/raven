services:
  ui:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./ui:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"

#  ui:
#    image: node:20-alpine
#    working_dir: /app
#    volumes:
#      - ./ui:/app
#      - /app/node_modules
#    command: sh -c "npm install && npm run build && npm run preview -- --host 0.0.0.0 --port 80"

  auth:
    build:
      context: .
      dockerfile: auth/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy

  message:
    build:
      context: .
      dockerfile: message/Dockerfile
    depends_on:
      - mongodb
      - kafka

  relay:
    build:
      context: .
      dockerfile: relay/Dockerfile

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx:/etc/nginx/ssl:ro
    depends_on:
      - ui
      - auth
      - message
      - relay

  postgres:
    image: postgres:latest
    environment:
      - "POSTGRES_DB=raven"
      - "POSTGRES_USER=raven"
      - "POSTGRES_PASSWORD=raven"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U raven" ]
      interval: 5s
      timeout: 5s
      retries: 100

  mongodb:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null --port 27018
    ports:
      - "27018:27018"
    environment:
      MONGO_INITDB_ROOT_USERNAME: raven
      MONGO_INITDB_ROOT_PASSWORD: raven
      MONGO_INITDB_DATABASE: raven

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CLUSTER_ID: "b2b8f8a2-4ed6-4b8f-88a2-92bb957a5e43"
      KAFKA_LOG4J_LOGGERS: "kafka=WARN,kafka.controller=WARN,kafka.log.LogCleaner=WARN,state.change.logger=WARN,kafka.producer.async.DefaultEventHandler=WARN"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_LOG4J_TOOLS_LOGLEVEL: ERROR
