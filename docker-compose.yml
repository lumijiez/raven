services:
  auth_raven:
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "8000:8080"
    depends_on:
      postgres_raven:
        condition: service_healthy

  message_raven:
    build:
      context: .
      dockerfile: message/Dockerfile
    ports:
      - "8001:8080"
    depends_on:
      - mongodb_raven
      - kafka

  relay_raven:
    build:
      context: .
      dockerfile: relay/Dockerfile
    ports:
      - "8002:8080"
    depends_on:
      - mongodb_raven

  postgres_raven:
    image: postgres:latest
    environment:
      - "POSTGRES_DB=raven"
      - "POSTGRES_USER=raven"
      - "POSTGRES_PASSWORD=raven"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U raven" ]
      interval: 5s
      timeout: 5s
      retries: 100

  mongodb_raven:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null --port 27018
    environment:
      MONGO_INITDB_ROOT_USERNAME: raven
      MONGO_INITDB_ROOT_PASSWORD: raven
      MONGO_INITDB_DATABASE: raven
    ports:
      - "27018:27018"
    logging:
      driver: "none"

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CLUSTER_ID: "b2b8f8a2-4ed6-4b8f-88a2-92bb957a5e43"
      KAFKA_LOG4J_LOGGERS: "kafka=WARN,kafka.controller=WARN,kafka.log.LogCleaner=WARN,state.change.logger=WARN,kafka.producer.async.DefaultEventHandler=WARN"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_LOG4J_TOOLS_LOGLEVEL: ERROR